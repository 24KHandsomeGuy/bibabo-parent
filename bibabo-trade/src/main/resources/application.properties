# 应用名称
spring.application.name=bibabo-trade
#启用优雅停机。graceful 优雅、优美。默认为 immediate 立刻终止
server.shutdown=graceful
#设置优雅停机的缓冲时间
spring.lifecycle.timeout-per-shutdown-phase=60
#如果用的2.x版本的 就用注释的那四行配置
management.endpoint.shutdown.enabled=true
management.endpoint.health.enabled=true
management.endpoints.web.base-path=/
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
# 应用服务 WEB 访问端口
#server.port=${random.int[8091,8099]}
server.port=8091
# Dubbo 消费端订阅服务端的应用名，多个服务提供者用逗号分隔
# 这里订阅"自己"，会被忽略掉，请根据实际情况添加
dubbo.cloud.subscribed-services=bibabo-order-service,bibabo-stock-service,bibabo-wdm-service,bibabo-marketing-service
# Nacos 服务发现与注册配置，其中子属性 server-addr 指定 Nacos 服务器主机和端口
spring.cloud.nacos.discovery.server-addr=82.156.216.254:8848
# dubbo 协议
dubbo.protocol.id=dubbo
dubbo.protocol.name=dubbo
# dubbo 协议端口（ -1 表示自增端口，从 20880 开始）
dubbo.protocol.port=-1
###rocketmq
logging.level.com.alibaba.cloud.stream.binder.rocketmq=DEBUG
spring.cloud.stream.rocketmq.binder.name-server=39.107.156.177:9876
####producer
#####订单创建成功后，发送支付超时检查延时消息，消息自动取消掉未支付的订单
spring.cloud.stream.bindings.outputPaymentTimeOutCheck.destination=bibaboPaymentTimeOutCheckTopic
spring.cloud.stream.bindings.outputPaymentTimeOutCheck.content-type=application/json
spring.cloud.stream.rocketmq.bindings.outputPaymentTimeOutCheck.producer.group=bibaboPaymentTimeOutCheckGroup
#####订单支付成功后，发送支付成功事务消息，启动订单履约流程
spring.cloud.stream.bindings.outputOrderPaid.destination=bibaboOrderPaidTopic
spring.cloud.stream.bindings.outputOrderPaid.content-type=application/json
spring.cloud.stream.rocketmq.bindings.outputOrderPaid.producer.producerType=Trans
spring.cloud.stream.rocketmq.bindings.outputOrderPaid.producer.group=bibaboOrderPaidGroup
spring.cloud.stream.rocketmq.bindings.outputOrderPaid.producer.transactionListener=orderPaidTransactionListener
###redis
spring.redis.redisson.config={"singleServerConfig": {"address": "redis://39.107.156.177:6379", "database": 8, "password": 123456, subscriptionConnectionPoolSize: 2, connectionMinimumIdleSize: 2, connectionPoolSize: 4}}
###seata
spring.cloud.alibaba.seata.tx-service-group=bibabo_tx_group
seata.config.type=nacos
seata.config.nacos.server-addr=82.156.216.254:8848
seata.config.nacos.group=BIBABO_SEATA_GROUP
seata.config.nacos.username=nacos
seata.config.nacos.password=nacos
#seata.registry.type=nacos
#seata.registry.nacos.cluster=default
#seata.registry.nacos.server-addr=82.156.216.254:8848
#seata.registry.nacos.group=BIBABO_SEATA_GROUP
#seata.registry.nacos.username=nacos
#seata.registry.nacos.password=nacos
#seata.registry.nacos.application=seata-server
###elasticsearch
spring.elasticsearch.rest.uris=http://39.107.156.177:9200
spring.elasticsearch.rest.username=elastic
spring.elasticsearch.rest.password=123456
###sleuth、zipkin
spring.sleuth.sampler.probability=1
spring.sleuth.web.client.enabled=true
spring.zipkin.base-url=http://82.156.216.254:9411
# dubbo使用zipkin过滤器
dubbo.consumer.filter=tracing